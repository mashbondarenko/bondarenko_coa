// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: stat.proto
// Protobuf C++ Version: 5.29.3

#include "stat.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace stat {

inline constexpr GetAllCommentsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : comments_{},
        total_comments_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetAllCommentsResponse::GetAllCommentsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetAllCommentsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllCommentsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllCommentsResponseDefaultTypeInternal() {}
  union {
    GetAllCommentsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllCommentsResponseDefaultTypeInternal _GetAllCommentsResponse_default_instance_;

inline constexpr GetAllCommentsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : promo_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_{0},
        page_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetAllCommentsRequest::GetAllCommentsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetAllCommentsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllCommentsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllCommentsRequestDefaultTypeInternal() {}
  union {
    GetAllCommentsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllCommentsRequestDefaultTypeInternal _GetAllCommentsRequest_default_instance_;
}  // namespace stat
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_stat_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_stat_2eproto = nullptr;
const ::uint32_t
    TableStruct_stat_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::stat::GetAllCommentsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::stat::GetAllCommentsRequest, _impl_.promo_id_),
        PROTOBUF_FIELD_OFFSET(::stat::GetAllCommentsRequest, _impl_.page_),
        PROTOBUF_FIELD_OFFSET(::stat::GetAllCommentsRequest, _impl_.page_size_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::stat::GetAllCommentsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::stat::GetAllCommentsResponse, _impl_.comments_),
        PROTOBUF_FIELD_OFFSET(::stat::GetAllCommentsResponse, _impl_.total_comments_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::stat::GetAllCommentsRequest)},
        {11, -1, -1, sizeof(::stat::GetAllCommentsResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::stat::_GetAllCommentsRequest_default_instance_._instance,
    &::stat::_GetAllCommentsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_stat_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nstat.proto\022\004stat\"J\n\025GetAllCommentsRequ"
    "est\022\020\n\010promo_id\030\001 \001(\t\022\014\n\004page\030\002 \001(\005\022\021\n\tp"
    "age_size\030\003 \001(\005\"B\n\026GetAllCommentsResponse"
    "\022\020\n\010comments\030\001 \003(\t\022\026\n\016total_comments\030\002 \001"
    "(\0052]\n\016CommentService\022K\n\016GetAllComments\022\033"
    ".stat.GetAllCommentsRequest\032\034.stat.GetAl"
    "lCommentsResponseb\006proto3"
};
static ::absl::once_flag descriptor_table_stat_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_stat_2eproto = {
    false,
    false,
    265,
    descriptor_table_protodef_stat_2eproto,
    "stat.proto",
    &descriptor_table_stat_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_stat_2eproto::offsets,
    file_level_enum_descriptors_stat_2eproto,
    file_level_service_descriptors_stat_2eproto,
};
namespace stat {
// ===================================================================

class GetAllCommentsRequest::_Internal {
 public:
};

GetAllCommentsRequest::GetAllCommentsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:stat.GetAllCommentsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetAllCommentsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::stat::GetAllCommentsRequest& from_msg)
      : promo_id_(arena, from.promo_id_),
        _cached_size_{0} {}

GetAllCommentsRequest::GetAllCommentsRequest(
    ::google::protobuf::Arena* arena,
    const GetAllCommentsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetAllCommentsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, page_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, page_),
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, page_) +
               sizeof(Impl_::page_size_));

  // @@protoc_insertion_point(copy_constructor:stat.GetAllCommentsRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetAllCommentsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : promo_id_(arena),
        _cached_size_{0} {}

inline void GetAllCommentsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, page_),
           0,
           offsetof(Impl_, page_size_) -
               offsetof(Impl_, page_) +
               sizeof(Impl_::page_size_));
}
GetAllCommentsRequest::~GetAllCommentsRequest() {
  // @@protoc_insertion_point(destructor:stat.GetAllCommentsRequest)
  SharedDtor(*this);
}
inline void GetAllCommentsRequest::SharedDtor(MessageLite& self) {
  GetAllCommentsRequest& this_ = static_cast<GetAllCommentsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.promo_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* GetAllCommentsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetAllCommentsRequest(arena);
}
constexpr auto GetAllCommentsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetAllCommentsRequest),
                                            alignof(GetAllCommentsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetAllCommentsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetAllCommentsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetAllCommentsRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetAllCommentsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetAllCommentsRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetAllCommentsRequest>(), &GetAllCommentsRequest::ByteSizeLong,
            &GetAllCommentsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetAllCommentsRequest, _impl_._cached_size_),
        false,
    },
    &GetAllCommentsRequest::kDescriptorMethods,
    &descriptor_table_stat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetAllCommentsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 43, 2> GetAllCommentsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::stat::GetAllCommentsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string promo_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetAllCommentsRequest, _impl_.promo_id_)}},
    // int32 page = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetAllCommentsRequest, _impl_.page_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetAllCommentsRequest, _impl_.page_)}},
    // int32 page_size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetAllCommentsRequest, _impl_.page_size_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GetAllCommentsRequest, _impl_.page_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string promo_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetAllCommentsRequest, _impl_.promo_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 page = 2;
    {PROTOBUF_FIELD_OFFSET(GetAllCommentsRequest, _impl_.page_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 page_size = 3;
    {PROTOBUF_FIELD_OFFSET(GetAllCommentsRequest, _impl_.page_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\32\10\0\0\0\0\0\0"
    "stat.GetAllCommentsRequest"
    "promo_id"
  }},
};

PROTOBUF_NOINLINE void GetAllCommentsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:stat.GetAllCommentsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.promo_id_.ClearToEmpty();
  ::memset(&_impl_.page_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.page_size_) -
      reinterpret_cast<char*>(&_impl_.page_)) + sizeof(_impl_.page_size_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetAllCommentsRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetAllCommentsRequest& this_ = static_cast<const GetAllCommentsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetAllCommentsRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetAllCommentsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:stat.GetAllCommentsRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string promo_id = 1;
          if (!this_._internal_promo_id().empty()) {
            const std::string& _s = this_._internal_promo_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "stat.GetAllCommentsRequest.promo_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 page = 2;
          if (this_._internal_page() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_page(), target);
          }

          // int32 page_size = 3;
          if (this_._internal_page_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_page_size(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:stat.GetAllCommentsRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetAllCommentsRequest::ByteSizeLong(const MessageLite& base) {
          const GetAllCommentsRequest& this_ = static_cast<const GetAllCommentsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetAllCommentsRequest::ByteSizeLong() const {
          const GetAllCommentsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:stat.GetAllCommentsRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string promo_id = 1;
            if (!this_._internal_promo_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_promo_id());
            }
            // int32 page = 2;
            if (this_._internal_page() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_page());
            }
            // int32 page_size = 3;
            if (this_._internal_page_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_page_size());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetAllCommentsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetAllCommentsRequest*>(&to_msg);
  auto& from = static_cast<const GetAllCommentsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:stat.GetAllCommentsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_promo_id().empty()) {
    _this->_internal_set_promo_id(from._internal_promo_id());
  }
  if (from._internal_page() != 0) {
    _this->_impl_.page_ = from._impl_.page_;
  }
  if (from._internal_page_size() != 0) {
    _this->_impl_.page_size_ = from._impl_.page_size_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllCommentsRequest::CopyFrom(const GetAllCommentsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stat.GetAllCommentsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetAllCommentsRequest::InternalSwap(GetAllCommentsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.promo_id_, &other->_impl_.promo_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetAllCommentsRequest, _impl_.page_size_)
      + sizeof(GetAllCommentsRequest::_impl_.page_size_)
      - PROTOBUF_FIELD_OFFSET(GetAllCommentsRequest, _impl_.page_)>(
          reinterpret_cast<char*>(&_impl_.page_),
          reinterpret_cast<char*>(&other->_impl_.page_));
}

::google::protobuf::Metadata GetAllCommentsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetAllCommentsResponse::_Internal {
 public:
};

GetAllCommentsResponse::GetAllCommentsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:stat.GetAllCommentsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetAllCommentsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::stat::GetAllCommentsResponse& from_msg)
      : comments_{visibility, arena, from.comments_},
        _cached_size_{0} {}

GetAllCommentsResponse::GetAllCommentsResponse(
    ::google::protobuf::Arena* arena,
    const GetAllCommentsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetAllCommentsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.total_comments_ = from._impl_.total_comments_;

  // @@protoc_insertion_point(copy_constructor:stat.GetAllCommentsResponse)
}
inline PROTOBUF_NDEBUG_INLINE GetAllCommentsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : comments_{visibility, arena},
        _cached_size_{0} {}

inline void GetAllCommentsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.total_comments_ = {};
}
GetAllCommentsResponse::~GetAllCommentsResponse() {
  // @@protoc_insertion_point(destructor:stat.GetAllCommentsResponse)
  SharedDtor(*this);
}
inline void GetAllCommentsResponse::SharedDtor(MessageLite& self) {
  GetAllCommentsResponse& this_ = static_cast<GetAllCommentsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GetAllCommentsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GetAllCommentsResponse(arena);
}
constexpr auto GetAllCommentsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetAllCommentsResponse, _impl_.comments_) +
          decltype(GetAllCommentsResponse::_impl_.comments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetAllCommentsResponse), alignof(GetAllCommentsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetAllCommentsResponse::PlacementNew_,
                                 sizeof(GetAllCommentsResponse),
                                 alignof(GetAllCommentsResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GetAllCommentsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GetAllCommentsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GetAllCommentsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GetAllCommentsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GetAllCommentsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GetAllCommentsResponse>(), &GetAllCommentsResponse::ByteSizeLong,
            &GetAllCommentsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GetAllCommentsResponse, _impl_._cached_size_),
        false,
    },
    &GetAllCommentsResponse::kDescriptorMethods,
    &descriptor_table_stat_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GetAllCommentsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 44, 2> GetAllCommentsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::stat::GetAllCommentsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 total_comments = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetAllCommentsResponse, _impl_.total_comments_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetAllCommentsResponse, _impl_.total_comments_)}},
    // repeated string comments = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetAllCommentsResponse, _impl_.comments_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string comments = 1;
    {PROTOBUF_FIELD_OFFSET(GetAllCommentsResponse, _impl_.comments_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // int32 total_comments = 2;
    {PROTOBUF_FIELD_OFFSET(GetAllCommentsResponse, _impl_.total_comments_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\33\10\0\0\0\0\0\0"
    "stat.GetAllCommentsResponse"
    "comments"
  }},
};

PROTOBUF_NOINLINE void GetAllCommentsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:stat.GetAllCommentsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.comments_.Clear();
  _impl_.total_comments_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GetAllCommentsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GetAllCommentsResponse& this_ = static_cast<const GetAllCommentsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GetAllCommentsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GetAllCommentsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:stat.GetAllCommentsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string comments = 1;
          for (int i = 0, n = this_._internal_comments_size(); i < n; ++i) {
            const auto& s = this_._internal_comments().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "stat.GetAllCommentsResponse.comments");
            target = stream->WriteString(1, s, target);
          }

          // int32 total_comments = 2;
          if (this_._internal_total_comments() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_total_comments(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:stat.GetAllCommentsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GetAllCommentsResponse::ByteSizeLong(const MessageLite& base) {
          const GetAllCommentsResponse& this_ = static_cast<const GetAllCommentsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GetAllCommentsResponse::ByteSizeLong() const {
          const GetAllCommentsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:stat.GetAllCommentsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string comments = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_comments().size());
              for (int i = 0, n = this_._internal_comments().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_comments().Get(i));
              }
            }
          }
           {
            // int32 total_comments = 2;
            if (this_._internal_total_comments() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_total_comments());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GetAllCommentsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetAllCommentsResponse*>(&to_msg);
  auto& from = static_cast<const GetAllCommentsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:stat.GetAllCommentsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_comments()->MergeFrom(from._internal_comments());
  if (from._internal_total_comments() != 0) {
    _this->_impl_.total_comments_ = from._impl_.total_comments_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllCommentsResponse::CopyFrom(const GetAllCommentsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stat.GetAllCommentsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetAllCommentsResponse::InternalSwap(GetAllCommentsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.comments_.InternalSwap(&other->_impl_.comments_);
        swap(_impl_.total_comments_, other->_impl_.total_comments_);
}

::google::protobuf::Metadata GetAllCommentsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace stat
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_stat_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

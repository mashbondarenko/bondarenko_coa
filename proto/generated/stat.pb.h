// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: stat.proto
// Protobuf C++ Version: 5.29.3

#ifndef stat_2eproto_2epb_2eh
#define stat_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_stat_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_stat_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_stat_2eproto;
class GetAllCommentsRequest;
struct GetAllCommentsRequestDefaultTypeInternal;
extern GetAllCommentsRequestDefaultTypeInternal _GetAllCommentsRequest_default_instance_;
class GetAllCommentsResponse;
struct GetAllCommentsResponseDefaultTypeInternal;
extern GetAllCommentsResponseDefaultTypeInternal _GetAllCommentsResponse_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class GetAllCommentsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GetAllCommentsResponse) */ {
 public:
  inline GetAllCommentsResponse() : GetAllCommentsResponse(nullptr) {}
  ~GetAllCommentsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetAllCommentsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetAllCommentsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAllCommentsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetAllCommentsResponse(const GetAllCommentsResponse& from) : GetAllCommentsResponse(nullptr, from) {}
  inline GetAllCommentsResponse(GetAllCommentsResponse&& from) noexcept
      : GetAllCommentsResponse(nullptr, std::move(from)) {}
  inline GetAllCommentsResponse& operator=(const GetAllCommentsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAllCommentsResponse& operator=(GetAllCommentsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAllCommentsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAllCommentsResponse* internal_default_instance() {
    return reinterpret_cast<const GetAllCommentsResponse*>(
        &_GetAllCommentsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GetAllCommentsResponse& a, GetAllCommentsResponse& b) { a.Swap(&b); }
  inline void Swap(GetAllCommentsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAllCommentsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAllCommentsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetAllCommentsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAllCommentsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetAllCommentsResponse& from) { GetAllCommentsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetAllCommentsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "GetAllCommentsResponse"; }

 protected:
  explicit GetAllCommentsResponse(::google::protobuf::Arena* arena);
  GetAllCommentsResponse(::google::protobuf::Arena* arena, const GetAllCommentsResponse& from);
  GetAllCommentsResponse(::google::protobuf::Arena* arena, GetAllCommentsResponse&& from) noexcept
      : GetAllCommentsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCommentsFieldNumber = 1,
    kTotalCommentsFieldNumber = 2,
  };
  // repeated string comments = 1;
  int comments_size() const;
  private:
  int _internal_comments_size() const;

  public:
  void clear_comments() ;
  const std::string& comments(int index) const;
  std::string* mutable_comments(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_comments(int index, Arg_&& value, Args_... args);
  std::string* add_comments();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_comments(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& comments() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_comments();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_comments() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_comments();

  public:
  // int32 total_comments = 2;
  void clear_total_comments() ;
  ::int32_t total_comments() const;
  void set_total_comments(::int32_t value);

  private:
  ::int32_t _internal_total_comments() const;
  void _internal_set_total_comments(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:GetAllCommentsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetAllCommentsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> comments_;
    ::int32_t total_comments_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_stat_2eproto;
};
// -------------------------------------------------------------------

class GetAllCommentsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GetAllCommentsRequest) */ {
 public:
  inline GetAllCommentsRequest() : GetAllCommentsRequest(nullptr) {}
  ~GetAllCommentsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetAllCommentsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetAllCommentsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAllCommentsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetAllCommentsRequest(const GetAllCommentsRequest& from) : GetAllCommentsRequest(nullptr, from) {}
  inline GetAllCommentsRequest(GetAllCommentsRequest&& from) noexcept
      : GetAllCommentsRequest(nullptr, std::move(from)) {}
  inline GetAllCommentsRequest& operator=(const GetAllCommentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAllCommentsRequest& operator=(GetAllCommentsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAllCommentsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAllCommentsRequest* internal_default_instance() {
    return reinterpret_cast<const GetAllCommentsRequest*>(
        &_GetAllCommentsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GetAllCommentsRequest& a, GetAllCommentsRequest& b) { a.Swap(&b); }
  inline void Swap(GetAllCommentsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAllCommentsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAllCommentsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetAllCommentsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAllCommentsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetAllCommentsRequest& from) { GetAllCommentsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetAllCommentsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "GetAllCommentsRequest"; }

 protected:
  explicit GetAllCommentsRequest(::google::protobuf::Arena* arena);
  GetAllCommentsRequest(::google::protobuf::Arena* arena, const GetAllCommentsRequest& from);
  GetAllCommentsRequest(::google::protobuf::Arena* arena, GetAllCommentsRequest&& from) noexcept
      : GetAllCommentsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPromoIdFieldNumber = 1,
    kPageFieldNumber = 2,
    kPageSizeFieldNumber = 3,
  };
  // string promo_id = 1;
  void clear_promo_id() ;
  const std::string& promo_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_promo_id(Arg_&& arg, Args_... args);
  std::string* mutable_promo_id();
  PROTOBUF_NODISCARD std::string* release_promo_id();
  void set_allocated_promo_id(std::string* value);

  private:
  const std::string& _internal_promo_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_promo_id(
      const std::string& value);
  std::string* _internal_mutable_promo_id();

  public:
  // int32 page = 2;
  void clear_page() ;
  ::int32_t page() const;
  void set_page(::int32_t value);

  private:
  ::int32_t _internal_page() const;
  void _internal_set_page(::int32_t value);

  public:
  // int32 page_size = 3;
  void clear_page_size() ;
  ::int32_t page_size() const;
  void set_page_size(::int32_t value);

  private:
  ::int32_t _internal_page_size() const;
  void _internal_set_page_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:GetAllCommentsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      38, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetAllCommentsRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr promo_id_;
    ::int32_t page_;
    ::int32_t page_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_stat_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetAllCommentsRequest

// string promo_id = 1;
inline void GetAllCommentsRequest::clear_promo_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promo_id_.ClearToEmpty();
}
inline const std::string& GetAllCommentsRequest::promo_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GetAllCommentsRequest.promo_id)
  return _internal_promo_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetAllCommentsRequest::set_promo_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promo_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:GetAllCommentsRequest.promo_id)
}
inline std::string* GetAllCommentsRequest::mutable_promo_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_promo_id();
  // @@protoc_insertion_point(field_mutable:GetAllCommentsRequest.promo_id)
  return _s;
}
inline const std::string& GetAllCommentsRequest::_internal_promo_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.promo_id_.Get();
}
inline void GetAllCommentsRequest::_internal_set_promo_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promo_id_.Set(value, GetArena());
}
inline std::string* GetAllCommentsRequest::_internal_mutable_promo_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.promo_id_.Mutable( GetArena());
}
inline std::string* GetAllCommentsRequest::release_promo_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:GetAllCommentsRequest.promo_id)
  return _impl_.promo_id_.Release();
}
inline void GetAllCommentsRequest::set_allocated_promo_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.promo_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.promo_id_.IsDefault()) {
    _impl_.promo_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:GetAllCommentsRequest.promo_id)
}

// int32 page = 2;
inline void GetAllCommentsRequest::clear_page() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = 0;
}
inline ::int32_t GetAllCommentsRequest::page() const {
  // @@protoc_insertion_point(field_get:GetAllCommentsRequest.page)
  return _internal_page();
}
inline void GetAllCommentsRequest::set_page(::int32_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:GetAllCommentsRequest.page)
}
inline ::int32_t GetAllCommentsRequest::_internal_page() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_;
}
inline void GetAllCommentsRequest::_internal_set_page(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_ = value;
}

// int32 page_size = 3;
inline void GetAllCommentsRequest::clear_page_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = 0;
}
inline ::int32_t GetAllCommentsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:GetAllCommentsRequest.page_size)
  return _internal_page_size();
}
inline void GetAllCommentsRequest::set_page_size(::int32_t value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:GetAllCommentsRequest.page_size)
}
inline ::int32_t GetAllCommentsRequest::_internal_page_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_size_;
}
inline void GetAllCommentsRequest::_internal_set_page_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_size_ = value;
}

// -------------------------------------------------------------------

// GetAllCommentsResponse

// repeated string comments = 1;
inline int GetAllCommentsResponse::_internal_comments_size() const {
  return _internal_comments().size();
}
inline int GetAllCommentsResponse::comments_size() const {
  return _internal_comments_size();
}
inline void GetAllCommentsResponse::clear_comments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.comments_.Clear();
}
inline std::string* GetAllCommentsResponse::add_comments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_comments()->Add();
  // @@protoc_insertion_point(field_add_mutable:GetAllCommentsResponse.comments)
  return _s;
}
inline const std::string& GetAllCommentsResponse::comments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GetAllCommentsResponse.comments)
  return _internal_comments().Get(index);
}
inline std::string* GetAllCommentsResponse::mutable_comments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:GetAllCommentsResponse.comments)
  return _internal_mutable_comments()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetAllCommentsResponse::set_comments(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_comments()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:GetAllCommentsResponse.comments)
}
template <typename Arg_, typename... Args_>
inline void GetAllCommentsResponse::add_comments(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_comments(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:GetAllCommentsResponse.comments)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetAllCommentsResponse::comments() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:GetAllCommentsResponse.comments)
  return _internal_comments();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetAllCommentsResponse::mutable_comments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:GetAllCommentsResponse.comments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_comments();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetAllCommentsResponse::_internal_comments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.comments_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetAllCommentsResponse::_internal_mutable_comments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.comments_;
}

// int32 total_comments = 2;
inline void GetAllCommentsResponse::clear_total_comments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_comments_ = 0;
}
inline ::int32_t GetAllCommentsResponse::total_comments() const {
  // @@protoc_insertion_point(field_get:GetAllCommentsResponse.total_comments)
  return _internal_total_comments();
}
inline void GetAllCommentsResponse::set_total_comments(::int32_t value) {
  _internal_set_total_comments(value);
  // @@protoc_insertion_point(field_set:GetAllCommentsResponse.total_comments)
}
inline ::int32_t GetAllCommentsResponse::_internal_total_comments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_comments_;
}
inline void GetAllCommentsResponse::_internal_set_total_comments(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_comments_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // stat_2eproto_2epb_2eh
